/********************************************************************
 FileName:	usb_config.h
 Dependencies: 	GenericTypeDefs.h, usb_device.h
 Processor:	PIC18
 Hardware:	The code is intended to be used on the Open USB FXS board
 Compiler:  	Microchip C18

 Note:		This file can be auto-generated by Microchip's tool "usbgen".
		However, the example code from Microchip contains useful
		comments for understanding the meaning of several defines,
		so I have kept that as a base version. Basically, what is
		defined here is a set of configuration settings, including
		the buffer size of (control) EP0, the number of "interfaces",
		the number of endpoints, (important) the PING-PONG mode
		(full-mode for Open USB FXS), whether polling or interrupt
		mode is used for handling USB events, transceiver and
		speed settings, and finally the buffer size for the
		default "generic" endpoint (provided by the stack itself)
		

 Note:		This file has been adapted from published Microchip example
 		code. Hence, there is a substantial amount of code that
		cannot be copyrighted as my own. All contributed code is
		marked appropriately as such, and it is this part that I
		am placing under copyright.
 Copyright:	(sections marked with "avarvit") (C) Angelos Varvitsiotis 2009
 License:	GPLv3 (copyrighted part)

 *******************************************************************/

/*********************************************************************
 * Descriptor specific type definitions are defined in: usbd.h
 ********************************************************************/

#ifndef USBCFG_H
#define USBCFG_H

/** DEFINITIONS ****************************************************/
#define USB_EP0_BUFF_SIZE 8	// Valid Options: 8, 16, 32, or 64 bytes.
				// Using larger options take more SRAM, but
				// does not provide much advantage in most types
				// of applications.  Exceptions to this, are applications
				// that use EP0 IN or OUT for sending large amounts of
				// application related data.
									
#define USB_MAX_NUM_INT      1  // For tracking Alternate Setting
#define USB_MAX_EP_NUMBER    2	// avarvit

//Device descriptor - if these two definitions are not defined then
//  a ROM USB_DEVICE_DESCRIPTOR variable by the exact name of device_dsc
//  must exist.
// #define USB_USER_DEVICE_DESCRIPTOR &device_dsc
// #define USB_USER_DEVICE_DESCRIPTOR_INCLUDE extern ROM USB_DEVICE_DESCRIPTOR device_dsc

//Configuration descriptors - if these two definitions do not exist then
//  a ROM BYTE *ROM variable named exactly USB_CD_Ptr[] must exist.
// #define USB_USER_CONFIG_DESCRIPTOR USB_CD_Ptr
// #define USB_USER_CONFIG_DESCRIPTOR_INCLUDE extern ROM BYTE *ROM USB_CD_Ptr[]

//Make sure only one of the below "#define USB_PING_PONG_MODE"
//is uncommented.
//////////////// BEGIN contributed code by avarvit
//#define USB_PING_PONG_MODE USB_PING_PONG__NO_PING_PONG
#define USB_PING_PONG_MODE USB_PING_PONG__FULL_PING_PONG
//////////////// END contributed code by avarvit
//#define USB_PING_PONG_MODE USB_PING_PONG__EP0_OUT_ONLY
//#define USB_PING_PONG_MODE USB_PING_PONG__ALL_BUT_EP0		//NOTE: This mode is not supported in PIC18F4550 family rev A3 devices


#define USB_POLLING

/* Parameter definitions are defined in usb_device.h */
#define USB_PULLUP_OPTION USB_PULLUP_ENABLE
//                        USB_PULLUP_DISABLED

#define USB_TRANSCEIVER_OPTION USB_INTERNAL_TRANSCEIVER
//                             USB_EXTERNAL_TRANSCEIVER

#define USB_SPEED_OPTION USB_FULL_SPEED
//                       USB_LOW_SPEED (not valid option for PIC24F devices)


/** DEVICE CLASS USAGE *********************************************/
#define USB_SUPPORT_DEVICE
#define USB_USE_GEN

/** ENDPOINTS ALLOCATION *******************************************/

/* Generic */
#define USBGEN_EP_SIZE          32
#define USBGEN_EP_NUM            1

/** DEFINITIONS ****************************************************/

#endif //USBCFG_H
